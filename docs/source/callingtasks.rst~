Calling the task
===================

To call our task you can use the delay() method.

This is a handy shortcut to the apply_async() method which gives greater control of the task execution:

>>> from tasks import add
>>> add.delay(4, 4)

The task has now been processed by the worker you started earlier, and you can verify that by looking at the workers console output.

Calling a task returns an AsyncResult instance, which can be used to check the state of the task, wait for the task to finish or get its return value (or if the task failed, the exception and traceback). But this isnâ€™t enabled by default, and you have to configure Celery to use a result backend, which is not discussed as part of this tutorial.


